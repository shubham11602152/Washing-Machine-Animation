@import url("https://fonts.googleapis.com/css2?family=Open+Sans+Condensed:ital,wght@0,300;0,700;1,300&family=Roboto+Condensed:wght@300&display=swap");

:root {
  --light_gray: #dfdfdf;
  --dark_gray: #acacac;
  --blue: #226db480;
}

html,
body,
* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

body {
  height: 100dvh;
  display: flex;
  justify-content: center;
  align-items: center;
  background: radial-gradient(#f5f5f5, #2b5764ad);
}

* {
  /* border: 2px solid #0000007c; */
}

h1 {
  font-size: 40px;
  font-family: "Open Sans Condensed", sans-serif;
  filter: drop-shadow(2px 2px 2px #00000050);
}

.creator {
  /* position: absolute; */
  margin: 10px;
}

.content {
  animation: vibrate 3s 0.5s linear infinite;
}

h5 {
  font-weight: lighter;
  font-style: italic;
  float: right;
}

.screen1 {
  position: absolute;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  font-family: "Roboto Condensed", sans-serif;

  backdrop-filter: blur(10px);
  background-color: #a8ebff48;
  animation-delay: 3s;
  z-index: 10;
}

.fadeOut {
  opacity: 1;
  display: flex;
  visibility: visible;
  animation-name: fadeout-anim;
  animation-duration: 2s;
  animation-timing-function: ease-out;
  animation-fill-mode: forwards;
}

@keyframes fadeout-anim {
  from {
    opacity: 1;
    display: flex;
    visibility: visible;
  }
  to {
    opacity: 0;
    display: none;
    visibility: hidden;
  }
}

.container {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.container .washing_machine {
  position: relative;
  width: 200px;
  height: 250px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  filter: drop-shadow(0 0 4px rgba(0, 0, 0, 0.219));
}

.washing_machine .body {
  width: 100%;
  height: 230px;
  display: flex;
  flex-direction: column;
  border-radius: 15px;
  background-color: white;
  box-shadow: 0 0 10px var(--light_gray);
  z-index: 2;
  animation: vibrate 3s 1s linear infinite alternate;
}

@keyframes vibrate {
  0% {
    transform: translate(0px, 0px) rotateZ(0deg);
  }
  40% {
    transform: translate(0px, 0px) rotateZ(0deg);
  }
  42% {
    transform: translate(0.5px, 0.5px) rotateZ(0deg);
  }
  44% {
    transform: translate(-0.5px, 0) rotateZ(0deg);
  }
  46% {
    transform: translate(0.5px, -0.5px) rotateZ(0deg);
  }
  48% {
    transform: translate(0.5px, 0.5px) rotateZ(0deg);
  }
  50% {
    transform: translate(-0.5px, 0) rotateZ(0deg);
  }
  52% {
    transform: translate(0.5px, -0.5px) rotateZ(0deg);
  }
  53% {
    transform: translate(0.5px, 0.5px) rotateZ(0deg);
  }
  54% {
    transform: translate(-0.5px, 0) rotateZ(0deg);
  }
  55% {
    transform: translate(0.5px, -0.5px) rotateZ(0deg);
  }
  56% {
    transform: translate(0.5px, 0.5px) rotateZ(0deg);
  }
  57% {
    transform: translate(-0.5px, 0) rotateZ(0deg);
  }
  58% {
    transform: translate(0.5px, -0.5px) rotateZ(0deg);
  }
  60% {
    transform: translate(0.5px, 0.5px) rotateZ(0deg);
  }
  62% {
    transform: translate(0.5px, 0.5px) rotateZ(0deg);
  }
  64% {
    transform: translate(-0.5px, 0) rotateZ(0deg);
  }
  66% {
    transform: translate(0.5px, -0.5px) rotateZ(0deg);
  }
  68% {
    transform: translate(0.5px, 0.5px) rotateZ(0deg);
  }
  70% {
    transform: translate(0px, 0px) rotateZ(0deg);
  }
  100% {
    transform: translate(0px, 0px) rotateZ(0deg);
  }
}

.body .menu_container,
.body .lid_container {
  width: 100%;
}

.body .menu_container {
  height: 15%;
  display: flex;
  flex-direction: row;
  border-bottom: 4px solid var(--light_gray);
}

.menu_container .screen_container {
  width: 40%;
  display: flex;
  justify-content: center;
  align-items: center;
  border-right: 2px solid var(--light_gray);
}

.screen_container .screen {
  width: 70%;
  height: 40%;
  background-color: #dfdfdf;
}

.menu_container .buttons_container {
  width: 65%;
  padding: 0 10px;
  display: flex;
  justify-content: space-around;
  align-items: center;
}

.buttons_container .button {
  width: 18px;
  height: 18px;
  border: 5px solid var(--light_gray);
  border-radius: 50%;
  background-color: var(--dark_gray);
}

.body .lid_container {
  height: 85%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  border-top: 4px solid var(--dark_gray);
}

.lid_outer,
.lid_inner,
.lid_window {
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
}

.lid_outer {
  width: 140px;
  height: 140px;
  margin-bottom: 15px;
  background-color: var(--light_gray);
  box-shadow: 0 0 5px var(--light_gray);
}
.lid_inner {
  width: 75%;
  height: 75%;
  border: 6px solid var(--dark_gray);
  background-color: var(--dark_gray);
  /* box-shadow:inset 0 0 3px #1f1f1f; */
  position: relative;
  overflow: hidden;
  animation: rotation 3s 1s ease-in-out infinite alternate;
}

@keyframes rotation {
  0% {
    transform: rotateZ(0deg);
  }
  100% {
    transform: rotateZ(2880deg);
  }
}

.lid_window {
  width: 100%;
  height: 100%;
  background-color: var(--blue);
  box-shadow: inset 0 0 10px #5c5c5c79;
  backdrop-filter: blur(5px);
  z-index: 5;
}

.lid_inner .cloth {
  position: absolute;
  z-index: 4;
}

.c1 {
  width: 30px;
  height: 40px;
  bottom: 0;
  left: 0;
  border-radius: 60%;
  background-color: rgb(223, 28, 28);
}

.c2 {
  width: 50px;
  height: 30px;
  bottom: 0;
  right: 0;
  border-radius: 60%;
  background-color: rgb(255, 230, 10);
}

.c3 {
  width: 40px;
  height: 20px;
  bottom: 0;
  left: 20px;
  border-radius: 60%;
  background-color: rgb(60, 60, 148);
}

.washing_machine .legs {
  width: 85%;
  height: 20px;
  display: flex;
  justify-content: space-between;
  z-index: 1;
}

.legs .leg {
  width: 15px;
  height: 15px;
  border-bottom-left-radius: 50%;
  border-bottom-right-radius: 50%;
  background-color: var(--light_gray);
}

.washing_machine .shadow {
  position: absolute;
  bottom: 0;
  width: 100%;
  height: 10px;
  background-color: rgba(0, 0, 0, 0.3);
  border-radius: 40%;
  filter: blur(5px);
  animation: vibrate 3s 1s linear infinite alternate;
}
